extends ../../partials/header
block main
  script(src='/bower_components/pdfmake/build/pdfmake.min.js' type='text/javascript')
  script(src='/bower_components/pdfmake/build/vfs_fonts.js' type='text/javascript')
  script(src='/bower_components/html2canvas.min.js' type='text/javascript')
  //- .general-beta-text beta version 1.0.0
  input.display-none#filters(type=text value=JSON.stringify(filters))
  .all-content-header-wrapper
    .header-user-logo
      img(src=company.profile_photo alt="usersmagic " + company.name)
    a.header-each-step-text(href="/projects") Projects
    i.fas.fa-chevron-right.header-each-step-arrow
    a.header-each-step-text(href="/projects/submit?id=" + project._id)= project.name
    i.fas.fa-chevron-right.header-each-step-arrow
    a.header-each-step-text(href="/projects/results?id=" + project._id) Results
    .header-credit-wrapper
      span.header-credit-amount #{company.credit} credits
      span.header-get-credit-button Get Credits
  .all-content-inner-wrapper
    .all-content-inner-content-wrapper
      .results-header-wrapper
        span.results-project-title= project.name
        .results-download-button
          span.results-download-button-span Download Results
          .download-options-wrapper
            a.each-download-option(href="/projects/report/csv?id=" + project._id) .CSV
            a.each-download-option.pdf-download .PDF
      //-.filters-wrapper
        .general-filter-button-wrapper
          .general-filter-button.age Age
          .general-filter-button.gender Gender
        .filter-options.age
          input(type='number' placeholder='min. Age' autocomplete="off" min="18" max="90").age-input#start
          span -
          input(type='number' placeholder='max. Age' autocomplete="off" min="18" max="90").age-input#end
          .general-seablue-button.apply-age#filter
            span Apply Filter
        .filter-options.gender
          .general-filter-button.filter-option-button
            span(value='male') Male
          .general-filter-button.filter-option-button
            span(value='female') Female
          .general-filter-button.filter-option-button
            span(value='other') Other
        .selected-filters-wrapper
      if questions && questions.length
        .questions-summary-results-wrapper
          each question in questions
            .summary-results-each-question-wrapper
              .summary-results-each-question-inner-wrapper
                span.summary-results-each-question-text= question.text
                .summary-results-each-question-info-wrapper
                  if question.type == 'yes_no'
                    span.summary-results-each-question-info-title #{Math.max(question.answers.yes, question.answers.no)}%
                    span.summary-results-each-question-info-data= (question.answers.yes >= question.answers.no ? 'YES' : 'NO')
                  else if question.type == 'multiple_choice'
                    span.summary-results-each-question-info-title= question.data.max
                    span.summary-results-each-question-info-data= question.answers[question.data.max]
                  else if question.type == 'opinion_scale'
                    span.summary-results-each-question-info-title mean
                    span.summary-results-each-question-info-data #{question.data.mean}/#{Object.keys(question.answers)[Object.keys(question.answers).length-1]}
                  else if question.type == 'open_answer'
                    span.summary-results-each-question-info-title answers
                    span.summary-results-each-question-info-data= question.answers.length
        .questions-all-wrapper
          each question, i in questions
            .each-question-wrapper
              span.each-question-number= i+1
              span.each-question-text= question.text
              span.each-question-details= question.details
              if question.type == 'yes_no'
                .yes-no-wrapper
                  .yes-content-wrapper
                    .yes-outer-wrapper
                      .yes-inner-wrapper(style=`height: ${question.answers.yes}%; margin-top: ${question.answers.no}%`)
                      .yes-no-icon-outer-wrapper
                        .yes-icon-wrapper
                          i.fas.fa-check
                        .yes-text YES
                    .yes-no-text-wrapper
                      span.yes-no-percentage-text #{question.answers.yes}%
                      span.yes-no-number-text #{question.data.yes_number} answers
                  .no-content-wrapper
                    .no-outer-wrapper
                      .no-inner-wrapper(style=`height: ${question.answers.no}%; margin-top: ${question.answers.yes}%`)
                      .yes-no-icon-outer-wrapper
                        .no-icon-wrapper
                          i.fas.fa-times
                        .no-text NO
                    .yes-no-text-wrapper
                      span.yes-no-percentage-text #{question.answers.no}%
                      span.yes-no-number-text #{question.data.no_number} answers
              else if question.type == 'multiple_choice'
                span.multiple-choice-answer-title #{question.data.total} answers
                .multiple-choice-answers-wrapper
                  each key in Object.keys(question.answers)
                    .each-multiple-choice
                      span.each-multiple-choice-text= key
                      span.each-multiple-choice-number= question.answers[key]
              else if question.type == 'open_answer'
                span.open-answer-title #{question.answers.length} answers
                .open-answer-wrapper
                  each answer in question.answers
                    span.each-answer= answer
              else if question.type == 'opinion_scale'
                .histogram-wrapper
                  .histogram-title-wrapper
                    span.histogram-title-text Histogram
                    span.histogram-title-answers-text #{question.data.total_number} answers
                  .histogram-title-wrapper
                    span.histogram-title-info Mean:
                      span.seablue  #{question.data.mean}
                    span.histogram-title-info Median:
                      span.seablue  #{question.data.median}
                  .histogram-inner-wrapper
                    each key, i in Object.keys(question.answers)
                      .histogram-each-column(style=`height: ${question.answer_percentages[key]}%`)
                        span.histogram-each-column-text= question.answers[key]
                      if i < Object.keys(question.answers).length-1
                        .histogram-column-seperator
                  .histogram-inner-line-wrapper
                    each key, i in Object.keys(question.answers)
                      .histogram-each-column-explanation= key
                      if i < Object.keys(question.answers).length-1
                        .histogram-column-seperator
                  .histogram-explanation-line
                    .histogram-explanation-line-item
                    .histogram-explanation-line-item
                    .histogram-explanation-line-item
                  .histogram-explanation-text-wrapper
                    span.histogram-explanation-text-left= question.labels.left
                    span.histogram-explanation-text-middle= question.labels.middle
                    span.histogram-explanation-text-right= question.labels.right
      else
        span.no-info-text We don't have any information on this page yet, please keep checking.
